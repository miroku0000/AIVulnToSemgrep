#!/bin/bash
#
# Download Vulnerability Data Script
# Downloads pre-processed Go vulnerability data from separate repository
#

set -e

REPO_URL="https://github.com/miroku0000/go-vulnerability-dataset.git"
DATA_DIR="out"

echo "🔍 Downloading Go vulnerability dataset..."

# Check if out directory already exists
if [ -d "$DATA_DIR" ]; then
    echo "⚠️  Warning: $DATA_DIR directory already exists."
    read -p "Remove existing data and download fresh? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        rm -rf "$DATA_DIR"
    else
        echo "Keeping existing data. Exiting."
        exit 0
    fi
fi

# Clone the data repository
echo "📥 Cloning vulnerability data repository..."
git clone "$REPO_URL" temp_data_repo

# Move the out directory to current location
if [ -d "temp_data_repo/out" ]; then
    mv temp_data_repo/out .
    echo "✅ Vulnerability data downloaded successfully!"
else
    echo "❌ Error: No 'out' directory found in data repository"
    exit 1
fi

# Clean up
rm -rf temp_data_repo

# Verify data
if [ -d "$DATA_DIR" ]; then
    VULN_COUNT=$(find "$DATA_DIR" -name "*_bad.go" | wc -l)
    echo "📊 Found $VULN_COUNT vulnerabilities with code examples"
    echo "🚀 Ready to run: python integrated_batch_generator.py"
else
    echo "❌ Error: Data download failed"
    exit 1
fi

echo "
🎯 Next steps:
1. Generate refined semgrep rules:
   python integrated_batch_generator.py --model qwen2.5-coder:14b --debug

2. Or generate basic rules:
   python vuln2semgrep.py --input ./out --output ./semgrep_rules --only-with-examples

3. Monitor progress:
   tail -f integrated_batch_generator.log
"